* add event sourcing
** add type column
*** add DB.Enum<>
** DB.PostEvent(type, Record key, data, tx)

* add tax types
** name (primary key)

* add tax rates
** taxType
** startsAt
** endsAt
** decimal percent

* add product
** name
** every product is a pool (like unit)
** salesTax

* add price
** startsAt/endsAt/pool/product/amount

* add price list
** name/rule

* implement decimal CalculatePrice(PriceList, Product, Pool, from, to)
** sum all found records

* add booking

* implement Tx.GetStoredObject
** update when record is stored
** add record index
*** atomic
*** init in constructor

* only update change fields in Table.Update

* add Record.To/FromJSON(Column[])
** add Column.To/FromJSON()
 
* add settings table

* add rest api
** add ping endpoint

* add login endpoint
** generate jwt token

* add openapi spec
  
* add Ask echo flag
** sharpl
** use to read passwords
** add password repeat/check on new admin

* add slog

sudo -u postgres psql [hostr]
alter user postgres with encrypted password ''
create user hostr
alter user hostr with encrypted password ''
create database hostr
grant all privileges on hostr to hostr
grant all on schema public to hostr