curl -X POST -H "Content-Type: application/json" -d '{"email": "adm", "password": "adm"}' http://localhost:5000/api/v1/login
curl -X POST http://localhost:5000/stop

* events
** only return events for this user
** add Key.Eq
*** add condition
** use DB.Query
** order by postedAt DESC
** set OFFSET/LIMIT from parameters
** sort again by postedAt ASC in code

* inject cx into table event handlers
** add object data arg
** replaces cx-arg to schema
*** allocate one shared instance
** use to set created/updatedBy fields in handlers

* add calendar events

* strip - from savepoint names

* move stored values to prev tx and finally cx on commit
  
* change pool/unit name from unique to index
** add index

* add command loop
** implement q - stop
*** send request to own ip/port
*** restrict to own ip/port in stop imp

* format sql statements in cx.prepare
** insert values in brackets

--
  
* add error filter
** catch exceptions and return json object
** internal server error default
** use HttpException as base for HttpError with code/message
*** special case in middleware to set status

* post ddl statements as events
** add virtual ExecDDL?
*** unless table is events
** events table must be initialized first
*** manually?
** add Cx.PostMigration(sql, tx)

* add settings
** store value as json

* add tax types
** name (primary key)

* add tax rates
** taxType
** startsAt
** endsAt
** decimal percent

* add product
** name
** every product is a pool (like unit)
** salesTax

* add price
** startsAt/endsAt/pool/product/amount

* add price list
** name/rule

* implement decimal CalculatePrice(PriceList, Product, Pool, from, to)
** sum all found records

* add booking

* add Record.To/FromJSON(Column[])
** add Column.To/FromJSON()
 
* add rest api
** add ping endpoint

* add login endpoint
** generate jwt token

* add openapi spec
  
* add Ask echo flag
** sharpl
** use to read passwords
** add password repeat/check on new admin

* add slog

sudo -u postgres psql [hostr]
alter user postgres with encrypted password ''
create user hostr
alter user hostr with encrypted password ''
create database hostr
grant all privileges on hostr to hostr
grant all on schema public to hostr

sudo service postgresql restart